#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.12
# In conjunction with Tcl version 8.6
#    Apr 15, 2018 06:16:21 PM
# Author : Sagar Raghupathi

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from Gui_Support import Gui_support
from Look_Volume import look_volume

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    Gui_support.set_Tk_var()
    top = Media_Player (root)
    Gui_support.init(root, top)
    root.mainloop()

w = None
def create_Media_Player(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    Gui_support.set_Tk_var()
    top = Media_Player (w)
    Gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Media_Player():
    global w
    w.destroy()
    w = None

class Media_Player:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font11 = "-family {Calisto MT} -size 14 -weight bold -slant "  \
            "roman -underline 1 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x430+423+169")
        top.title("Media_Player")
        top.configure(background="#070707")
        top.configure(height="30")
        top.configure(highlightbackground="#f0f0f0")




        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.32, rely=0.05, height=59, width=255)
        self.TLabel1.configure(background="#070707")
        self.TLabel1.configure(foreground="#ffffff")
        self.TLabel1.configure(font=font11)
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(justify=CENTER)
        self.TLabel1.configure(text='''Look Based Media Player''')
        self.TLabel1.configure(width=255)
        self.TLabel1.configure(compound="bottom")

        self.box_value = StringVar()
        self.TCombobox1 = ttk.Combobox(textvariable=self.box_value)
        #self.TCombobox1 = ttk.Combobox(top)
        self.TCombobox1.place(relx=0.23, rely=0.26, relheight=0.14
                , relwidth=0.54)
        self.TCombobox1.configure(values=Gui_support.get_file_list())
        READONLY = 'readonly'
        self.TCombobox1.configure(state=READONLY)
        self.TCombobox1.configure(takefocus="")
        #self.TCombobox1.bind('<<ComboboxSelected>>',func=self.select_combobox)
        '''
        self.TCombobox1.configure(postcommand="er")
        
        self.TCombobox1.configure(textvariable=Gui_support.Se)
        self.TCombobox1.configure(width=323)
        self.TCombobox1.configure(takefocus="y")
'''
        self.Button1 = Button(top)
        self.Button1.place(relx=0.33, rely=0.63, height=24, width=77)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#ffffff")
        self.Button1.configure(command=Gui_support.close)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Exit''')
        self.Button1.configure(width=77)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.52, rely=0.63, height=24, width=77)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#ffffff")
        
        self.Button2.configure(command=self.select_combobox)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Start''')
        self.Button2.configure(width=77)
          

    def select_combobox(self,top=None):
        self.value_of_combo = self.box_value.get()
        if(len(self.value_of_combo)>0):
            var ='vlc-ctrl play '
            look_volume.start(var+self.value_of_combo)
        else:
            print('*************Choose a File*************')
    
if __name__ == '__main__':
    print('*************Look-Based-Media-Player*************')
    vp_start_gui()



